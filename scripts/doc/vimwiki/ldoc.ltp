# local help_tag_prefix = ldoc.project:gsub("nvim%.", "", 1)
#
# function wrap(str, limit, indent, indent1)
#   indent = indent or ""
#   indent1 = indent1 or indent
#   limit = limit or 79
#   local here = 1 - #indent1
#   local function check(sp, st, word, fi)
#     if fi - here > limit then
#       here = st - #indent
#       return "\n" .. indent .. word
#     end
#   end
#   return indent1 .. str:gsub("(%s+)()(%S+)()", check)
# end
#
# function trim(str)
#   str = str:gsub("^%s+", "")
#   str = str:gsub("%s+$", "")
#   return str
# end
#
*$(help_tag_prefix).txt*
                                      *$(help_tag_prefix)* *$(ldoc.project)*

$(wrap(ldoc.description))

# if module.info then
#   local fmt = "%-10s:     %s"
#   for tag, value in module.info:iter() do
    $(fmt:format(tag, value))
#   end
# end
# if module.tags.homepage then
    Homepage  :     <$(module.tags.homepage[1])>
# end

==============================================================================
CONTENTS
                                      *$(help_tag_prefix)-contents*

    1. Intro ........................ |$(help_tag_prefix)_intro|
    2. API .......................... |$(help_tag_prefix)-api|
# local i = 1
# local fmt = "%s %s"
# for kind, items, type in ldoc.kinds() do
#   if ldoc.allowed_in_contents(type, module) then
#     for item in items() do
#       local j = 1
#
#       for kind, items, type in item.kinds() do
#         if ldoc.allowed_in_contents(type, module) then
#           kind = trim(kind:gsub("Class ", ""))
#           local num = "2." .. j .. "."
#           local sec = num .. " " .. kind .. "........................"
#           local help_tag = help_tag_prefix .. "-" .. kind:lower()
      $(fmt:format(sec:sub(1, 31), help_tag))
#
#           j = j + 1
#         end
#       end
#     end
#   end
# end
    3. Examples ..................... |$(help_tag_prefix)-examples|
    4. Changelog .................... |$(help_tag_prefix)-changelog|
    5. Bugs ......................... |$(help_tag_prefix)-bugs|
    6. Contributing ................. |$(help_tag_prefix)-contributing|
    7. License ...................... |$(help_tag_prefix)-license|

==============================================================================
1. Intro
                                      *$(help_tag_prefix)-intro*

$(wrap(ldoc.full_description))

==============================================================================
2. API
                                      *$(help_tag_prefix)-api*

# local i = 1
# local fmt = "%-10s %s"
# for kind, items, type in ldoc.kinds() do
#   if ldoc.allowed_in_contents(type, module) then
#     for item in items() do
#       local j = 1
#
#       for kind, items, type in item.kinds() do
#         if ldoc.allowed_in_contents(type, module) then
#           kind = trim(kind:gsub("Class ", ""))
#           local num = "2." .. j .. "."
#           local sec = num .. " " .. kind
#           local help_tag = help_tag_prefix .. "-" .. kind:lower()
------------------------------------------------------------------------------
$(sec)
                                      *$(help_tag)*

$(wrap(ldoc.descript(kind)))

#
#           j = j + 1
#         end
#       end
#     end
#   end
# end
==============================================================================
3. Examples
                                      *$(help_tag_prefix)-examples*

==============================================================================
4. Changelog
                                      *$(help_tag_prefix)-changelog*

6 Nov 2021                                                              v0.0.1
  Initial Release

==============================================================================
5. Bugs
                                      *$(help_tag_prefix)-bugs*

==============================================================================
6. Contributing
                                      *$(help_tag_prefix)-contributing*

==============================================================================
7. License
                                      *$(help_tag_prefix)-license*
>
  MIT License
  Copyright $(module.tags.copyright)
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the “Software”), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.
  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
<
